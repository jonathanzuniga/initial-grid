// Variables
// ==========================================================================
// Número de columnas.
$grid-columns-number: 12;

// Margen del lado izquierdo y derecho de cada columna.
$grid-column-gutter: 15px;

// Espacio inferior de cada renglón.
$grid-row-bottom-space: 15px;

// El ancho mínimo para una pantalla de tamaño mediano.
$min-width-medium-screen: 640px;

// El ancho mínimo para una pantalla de tamaño grande.
$min-width-large-screen: 1024px;

/* Base
 * ========================================================================== */
* {
	box-sizing: border-box;
}

.row {
	display: flex;
	flex-wrap: wrap;
	margin-bottom: $grid-row-bottom-space;

	.row {
		margin-left: -$grid-column-gutter;
		margin-right: -$grid-column-gutter;
	}
}

@mixin column {
	flex-basis: 0;
	flex-grow: 1;
	max-width: 100%;
	width: 100%;
}

@mixin gutter {
	padding-left: $grid-column-gutter;
	padding-right: $grid-column-gutter;
}

%column {
	@include column;
	@include gutter;
}

.column,
[class*="column-small-"],
[class*="column-medium-"],
[class*="column-large-"] {
	@extend %column;
}

/* Horizontal modifiers
 * ========================================================================== */
.columns-left {
	justify-content: flex-start;
}

.columns-center {
	justify-content: center;
}

.columns-right {
	justify-content: flex-end;
}

.columns-between {
	justify-content: space-between;
}

.columns-around {
	justify-content: space-around;
}

/* Vertical modifiers
 * ========================================================================== */
.columns-top {
	align-items: flex-start;
}

.columns-middle {
	align-items: center;
}

.columns-bottom {
	align-items: flex-end;
}

.column-top {
	align-self: flex-start;
}

.column-middle {
	align-self: center;
}

.column-bottom {
	align-self: flex-end;
}

/* Columns
 * ========================================================================== */
@for $i from 1 through $grid-columns-number {
	.column-#{$i} {
		@extend %column;

		$column-width: percentage($i / $grid-columns-number);
		flex-basis: $column-width;
		max-width: $column-width;
	}
}

/* Offsets
 * ========================================================================== */
@for $i from 1 through ($grid-columns-number - 1) {
	.column-offset-#{$i} {
		margin-left: percentage($i / $grid-columns-number);
	}
}

/* Responsive classes
 * ========================================================================== */
@media (min-width: 0) {
	@for $i from 1 through $grid-columns-number {
		.column-small-#{$i} {
			$column-width: percentage($i / $grid-columns-number);
			flex-basis: $column-width;
			max-width: $column-width;
		}
	}
}

@media (min-width: $min-width-medium-screen) {
	@for $i from 1 through $grid-columns-number {
		.column-medium-#{$i} {
			$column-width: percentage($i / $grid-columns-number);
			flex-basis: $column-width;
			max-width: $column-width;
		}
	}
}

@media (min-width: $min-width-large-screen) {
	@for $i from 1 through $grid-columns-number {
		.column-large-#{$i} {
			$column-width: percentage($i / $grid-columns-number);
			flex-basis: $column-width;
			max-width: $column-width;
		}
	}
}

/* Collapse columns
 * ========================================================================== */
.columns-collapse {
	&.row {
		margin-left: 0;
		margin-right: 0;
	}

	[class^="column"] {
		padding-left: 0;
		padding-right: 0;
	}
}
